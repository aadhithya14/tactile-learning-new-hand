# @package agent
_target_: tactile_learning.agents.FISHAgent
expert_demo_nums: ${expert_demo_nums} # Demo to get the base action from
expert_id: ${expert_id}
reward_matching_steps: ${reward_matching_steps}
features_repeat: ${features_repeat}
end_frames_repeat: ${end_frames_repeat}
exploration: ${exploration}
sum_experts: ${sum_experts}
scale_representations: ${scale_representations}
exponential_exploration: ${exponential_exploration}
exponential_offset_exploration: ${exponential_offset_exploration}
base_policy: ${base_policy}
match_from_both: ${match_from_both}
episode_frame_matches: ${episode_frame_matches}
expert_frame_matches: ${expert_frame_matches}
ssim_base_factor: ${ssim_base_factor}
mock_demo_nums: ${mock_demo_nums} # Demo that will be moved mockly
data_path: ${data_path} # Path to hold all the preprocessed demos
image_out_dir: ${image_out_dir}
tactile_out_dir: ${tactile_out_dir}
tactile_model_type: ${tactile_model_type}
image_model_type: ${image_model_type}
reward_representations: ${reward_representations}
policy_representations: ${policy_representations}
experiment_name: ${experiment}
view_num: ${camera_num}
action_shape: ??? # 12 + 7 TODO: to be specified later in the environment (when we add the environment) but for now we're specifiying here 
device: ${device}
lr: 1e-4 # It was 1e-4 before 
feature_dim:  512 # 16(Allegro) + 7(kinova) - TODO: Check this not sure what's happening lol 
# use_tb: ${use_tb}
hidden_dim: 64
critic_target_tau: 0.01
num_expl_steps: ${num_seed_frames}
update_every_steps: 2
stddev_schedule: 0.1
stddev_clip: 0.3
augment: True # Parameter to check if we augment the image in training
rewards: ${rewards}
sinkhorn_rew_scale: 200
update_target_every: 100000
auto_rew_scale: True
auto_rew_scale_factor: 10
bc_weight_type: 'qfilter'
bc_weight_schedule: 'linear(1.0,0.1,20000)'
arm_offset_scale_factor: 0.015
# hand_offset_scale_factor: 0.25 # eraser turning (card turning)
# hand_offset_scale_factor: 0.25 # plier picking For this task we'll try very little variations
# hand_offset_scale_factor: 0.25 # bowl unstacking
# hand_offset_scale_factor: 0.4 #sponge flipping
hand_offset_scale_factor: 0.07 # Peg insertion

# offset_scale_factor: -0.1 # Output of the model is -1,1 -> we can set the offset to whatever
# offset_mask: [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] # sponge flipping
# offset_mask: [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] # sponge flipping gen0
# offset_mask: [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] # eraser turning 
offset_mask: [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0] # plier picking
# offset_mask: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0] # bowl unstacking
# offset_mask: [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0] # bowl unstacking gen1
# offset_mask: [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] # bowl unstacking gen2
# offset_mask: [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] # peg insertion
# offset_mask: [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] # peg insertion gen1